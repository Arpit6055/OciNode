name: Node.js CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Set up environment variables
        run: |
          export TNS_ADMIN=/actions-runner/_work/instantclient_19_8/network/admin
          export LD_LIBRARY_PATH=/actions-runner/_work/instantclient_19_8:$LD_LIBRARY_PATH

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Check if the branch is not 'demo', then execute npm ci and npm test
      - name: Check branch and run npm ci and npm test
        if: github.ref != 'refs/heads/demo'
        run: |
          npm ci
          npm test

      # For other branches, including 'demo', skip npm ci and npm test
      - name: Skip npm ci and npm test for demo branch
        if: github.ref == 'refs/heads/demo'
        run: echo "Skipping npm ci and npm test for the demo branch"

      - run: touch .env
      - run: echo "${{secrets.PROD_ENV}}" > .env
      - run: docker build --pull --rm -t node-express-getting-started -f DOCKERFILE .
      - run: |
          if [ "$(docker ps -q -f name=node-express-getting-started)" ]; then
              docker stop node-express-getting-started
          fi
      - run: docker run --rm -d -p 3000:3000 --name node-express-getting-started node-express-getting-started:latest